Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
                              obj/Debug/n3310.o (__divmodhi4)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o (exit)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                              obj/Debug/n3310.o (__do_clear_bss)
/usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/avr/lib/libc.a(memcpy_P.o)
                              obj/Debug/n3310.o (memcpy_P)

Discarded input sections

 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
 .stab          0x0000000000000000      0x6cc /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
 .stabstr       0x0000000000000000       0x64 /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
 .text          0x0000000000000000        0x0 obj/Debug/main.o
 .bss           0x0000000000000000        0x0 obj/Debug/main.o
 .stab          0x0000000000000000      0x5ac obj/Debug/main.o
 .stabstr       0x0000000000000000      0xcd2 obj/Debug/main.o
 .text          0x0000000000000000        0x0 obj/Debug/n3310.o
 .bss           0x0000000000000000        0x0 obj/Debug/n3310.o
 .stab          0x0000000000000000     0x1770 obj/Debug/n3310.o
 .stabstr       0x0000000000000000     0x1123 obj/Debug/n3310.o
 .text.LcdContrast
                0x0000000000000000       0x22 obj/Debug/n3310.o
 .text.LcdStr   0x0000000000000000       0x44 obj/Debug/n3310.o
 .text.LcdPixel
                0x0000000000000000       0xc4 obj/Debug/n3310.o
 .text.LcdLine  0x0000000000000000       0xfe obj/Debug/n3310.o
 .text.LcdCircle
                0x0000000000000000      0x104 obj/Debug/n3310.o
 .text.LcdSingleBar
                0x0000000000000000       0x8e obj/Debug/n3310.o
 .text.LcdBars  0x0000000000000000       0x82 obj/Debug/n3310.o
 .text.LcdRect  0x0000000000000000       0x90 obj/Debug/n3310.o
 .text.LcdImage
                0x0000000000000000       0x28 obj/Debug/n3310.o
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc   0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000000        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000000        0x0 /usr/avr/lib/libc.a(memcpy_P.o)
 .bss           0x0000000000000000        0x0 /usr/avr/lib/libc.a(memcpy_P.o)
 .stab          0x0000000000000000       0x90 /usr/avr/lib/libc.a(memcpy_P.o)
 .stabstr       0x0000000000000000       0x43 /usr/avr/lib/libc.a(memcpy_P.o)
 .text.avr-libc
                0x0000000000000000       0x18 /usr/avr/lib/libc.a(memcpy_P.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
LOAD obj/Debug/main.o
LOAD obj/Debug/n3310.o
LOAD /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a
LOAD /usr/avr/lib/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a
LOAD /usr/avr/lib/libm.a
LOAD /usr/avr/lib/libc.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x7a0
 *(.vectors)
 .vectors       0x0000000000000000       0x34 /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data.__c.1854
                0x0000000000000034        0x3 obj/Debug/main.o
 .progmem.data.__c.1852
                0x0000000000000037        0xf obj/Debug/main.o
 .progmem.data.FontLookup
                0x0000000000000046      0x320 obj/Debug/n3310.o
                0x0000000000000366                . = ALIGN (0x2)
                0x0000000000000366                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000366        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000366                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000366                __ctors_start = .
 *(.ctors)
                0x0000000000000366                __ctors_end = .
                0x0000000000000366                __dtors_start = .
 *(.dtors)
                0x0000000000000366                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000366        0x0 /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
                0x0000000000000366                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000366        0xc /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000372       0x10 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000372                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000382        0x4 /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
 *(.init9)
 *(.text)
 .text          0x0000000000000386        0x2 /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
                0x0000000000000386                __vector_22
                0x0000000000000386                __vector_1
                0x0000000000000386                __vector_24
                0x0000000000000386                __vector_12
                0x0000000000000386                __bad_interrupt
                0x0000000000000386                __vector_6
                0x0000000000000386                __vector_3
                0x0000000000000386                __vector_23
                0x0000000000000386                __vector_25
                0x0000000000000386                __vector_11
                0x0000000000000386                __vector_13
                0x0000000000000386                __vector_17
                0x0000000000000386                __vector_19
                0x0000000000000386                __vector_7
                0x0000000000000386                __vector_5
                0x0000000000000386                __vector_4
                0x0000000000000386                __vector_9
                0x0000000000000386                __vector_2
                0x0000000000000386                __vector_21
                0x0000000000000386                __vector_15
                0x0000000000000386                __vector_8
                0x0000000000000386                __vector_14
                0x0000000000000386                __vector_10
                0x0000000000000386                __vector_16
                0x0000000000000386                __vector_18
                0x0000000000000386                __vector_20
                0x0000000000000388                . = ALIGN (0x2)
 *(.text.*)
 .text.main     0x0000000000000388       0x28 obj/Debug/main.o
                0x0000000000000388                main
 .text.LcdSend  0x00000000000003b0       0x1a obj/Debug/n3310.o
 .text.LcdClear
                0x00000000000003ca       0x30 obj/Debug/n3310.o
                0x00000000000003ca                LcdClear
 .text.LcdUpdate
                0x00000000000003fa       0xce obj/Debug/n3310.o
                0x00000000000003fa                LcdUpdate
 .text.LcdInit  0x00000000000004c8       0x48 obj/Debug/n3310.o
                0x00000000000004c8                LcdInit
 .text.LcdGotoXYFont
                0x0000000000000510       0x36 obj/Debug/n3310.o
                0x0000000000000510                LcdGotoXYFont
 .text.LcdChr   0x0000000000000546      0x1cc obj/Debug/n3310.o
                0x0000000000000546                LcdChr
 .text.LcdFStr  0x0000000000000712       0x3c obj/Debug/n3310.o
                0x0000000000000712                LcdFStr
 .text.libgcc.div
                0x000000000000074e       0x26 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
                0x000000000000074e                __divmodhi4
                0x000000000000074e                _div
 .text.libgcc.div
                0x0000000000000774       0x28 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                0x0000000000000774                __udivmodhi4
                0x000000000000079c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000079c        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                0x000000000000079c                exit
                0x000000000000079c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000079c        0x4 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000007a0                _etext = .

.data           0x0000000000800100        0x0 load address 0x00000000000007a0
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
 .data          0x0000000000800100        0x0 obj/Debug/main.o
 .data          0x0000000000800100        0x0 obj/Debug/n3310.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/avr/lib/libc.a(memcpy_P.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                0x0000000000800100                PROVIDE (__data_end, .)

.bss            0x0000000000800100      0x1ff
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.UpdateLcd
                0x0000000000800100        0x1 obj/Debug/n3310.o
 .bss.LcdCacheIdx
                0x0000000000800101        0x2 obj/Debug/n3310.o
 .bss.HiWaterMark
                0x0000000000800103        0x2 obj/Debug/n3310.o
 .bss.LoWaterMark
                0x0000000000800105        0x2 obj/Debug/n3310.o
 .bss.LcdCache  0x0000000000800107      0x1f8 obj/Debug/n3310.o
 *(COMMON)
                0x00000000008002ff                PROVIDE (__bss_end, .)
                0x00000000000007a0                __data_load_start = LOADADDR (.data)
                0x00000000000007a0                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008002ff        0x0
                0x00000000008002ff                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008002ff                PROVIDE (__noinit_end, .)
                0x00000000008002ff                _end = .
                0x00000000008002ff                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 obj/Debug/main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 obj/Debug/n3310.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(bin/Debug/lcd3310.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
LcdBars                                           obj/Debug/n3310.o
LcdChr                                            obj/Debug/n3310.o
LcdCircle                                         obj/Debug/n3310.o
LcdClear                                          obj/Debug/n3310.o
                                                  obj/Debug/main.o
LcdContrast                                       obj/Debug/n3310.o
LcdFStr                                           obj/Debug/n3310.o
                                                  obj/Debug/main.o
LcdGotoXYFont                                     obj/Debug/n3310.o
                                                  obj/Debug/main.o
LcdImage                                          obj/Debug/n3310.o
LcdInit                                           obj/Debug/n3310.o
                                                  obj/Debug/main.o
LcdLine                                           obj/Debug/n3310.o
LcdPixel                                          obj/Debug/n3310.o
LcdRect                                           obj/Debug/n3310.o
LcdSingleBar                                      obj/Debug/n3310.o
LcdStr                                            obj/Debug/n3310.o
LcdUpdate                                         obj/Debug/n3310.o
                                                  obj/Debug/main.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__bss_end                                         /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
__divmodhi4                                       /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
                                                  obj/Debug/n3310.o
__do_clear_bss                                    /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_clear_bss.o)
                                                  obj/Debug/n3310.o
__heap_end                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__init                                            /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__stack                                           /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__udivmodhi4                                      /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_udivmodhi4.o)
                                                  /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
__vector_1                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_10                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_11                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_12                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_13                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_14                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_15                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_16                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_17                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_18                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_19                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_2                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_20                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_21                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_22                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_23                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_24                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_25                                       /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_3                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_4                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_5                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_6                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_7                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_8                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_9                                        /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vector_default                                  /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
__vectors                                         /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
_div                                              /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_divmodhi4.o)
_exit                                             /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/4.8.2/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
main                                              obj/Debug/main.o
                                                  /usr/lib/gcc/avr/4.8.2/../../../../avr/lib/avr4/crtm88p.o
memcpy_P                                          /usr/avr/lib/libc.a(memcpy_P.o)
                                                  obj/Debug/n3310.o
